name: Build and Dockerize the APP

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

env:
  DOCKER_IMAGE_FRONTEND: greyfighter/prepre:nuxt-app-v1 # Use your Docker Hub repo name
  DOCKER_IMAGE_TAG: v1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.18.0"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: |
          cd frontend
          pnpm install

      - name: Build application
        run: |
          cd frontend
          pnpm run build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          DOCKER_COMPOSE_VERSION="v2.29.7"  # Use the latest version as needed
          sudo curl -SL "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Check version to confirm installation

      - name: Build and push Docker images
        run: |
          cd frontend  # Ensure you are in the frontend directory
          docker-compose build
          docker-compose push

      ###############################
      ###############################
      ###############################
      ###############################
      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Create SSH directory
        run: mkdir -p ~/.ssh

      - name: Store SSH key
        run: |
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add host key
        run: |
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Deploy to VPS using sshpass
        run: |
          export SSHPASS=${{ secrets.VPS_PASSWORD }}
          sshpass -e ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            docker pull ${{ env.DOCKER_IMAGE_FRONTEND }}
            docker stop my-app || true
            docker rm my-app || true
            docker run -d --name my-app -p 3000:3000 ${{ env.DOCKER_IMAGE_FRONTEND }}
          EOF
      # - name: Deploy to Hetzner VPS
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.VPS_HOST }}
      #     username: ${{ secrets.VPS_USER }}
      #     key: ${{ secrets.VPS_SSH_KEY }} # Only if using SSH key
      #     passphrase: ${{ secrets.VPS_SSH_PASSPHRASE }} # Add this line
      #     script: |
      #       docker pull $DOCKER_IMAGE_FRONTEND
      #       docker run -d --name my-app -p 3000:3000 $DOCKER_IMAGE_FRONTEND

      - name: Health Check
        run: |
          ssh -o StrictHostKeyChecking=no -i $VPS_SSH_KEY $VPS_USER@$VPS_HOST << 'EOF'
            if curl -s http://localhost:3000; then
              echo "Health check passed!"
            else
              echo "Health check failed!"
              exit 1
            fi
          EOF
