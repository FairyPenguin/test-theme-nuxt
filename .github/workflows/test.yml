name: Build and Dockerize the APP

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

env:
  DOCKER_IMAGE_FRONTEND: greyfighter/prepre:nuxt-app-v1 # Use your Docker Hub repo name
  DOCKER_IMAGE_TAG: v1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.18.0"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: |
          cd frontend
          pnpm install

      - name: Build application
        run: |
          cd frontend
          pnpm run build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          DOCKER_COMPOSE_VERSION="v2.29.7"  # Use the latest version as needed
          sudo curl -SL "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Check version to confirm installation

      - name: Build and push Docker images
        run: |
          cd frontend  # Ensure you are in the frontend directory
          docker-compose build
          docker-compose push

      ###############################
      ###############################
      ###############################
      ###############################
      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Deploy to Hetzner VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          # password: ${{ secrets.VPS_PASSWORD }} # Only if using password
          key: ${{ secrets.VPS_SSH_KEY }} # Only if using SSH key
          script: |
            docker pull $DOCKER_IMAGE_FRONTEND
            docker run -d --name my-app -p 3000:3000 $DOCKER_IMAGE_FRONTEND

      #   run: |
      #     echo "$VPS_SSH_KEY" > id_rsa  # Write the SSH key to a file
      #     chmod 600 id_rsa  # Set proper permission

      #     # Use SSH command with proper syntax
      #     ssh -o StrictHostKeyChecking=no -i id_rsa $VPS_USER@$VPS_HOST "docker pull $DOCKER_IMAGE_FRONTEND && docker run -d --name my-app -p 3000:3000 $DOCKER_IMAGE_FRONTEND"

      # - name: Cleanup
      #   run: rm -f id_rsa # Clean up the SSH key file

      # - name: Deploy to Hetzner VPS
      #   run: |
      #     ssh -o StrictHostKeyChecking=no -i $VPS_SSH_KEY $VPS_USER@$VPS_HOST << 'EOF'
      #       docker pull greyfighter/prepre:nuxt-app-v1
      #       docker run -d --name my-app -p 3000:3000 greyfighter/prepre:nuxt-app-v1
      #     EOF

      - name: Health Check
        run: |
          ssh -o StrictHostKeyChecking=no -i $VPS_SSH_KEY $VPS_USER@$VPS_HOST << 'EOF'
            if curl -s http://localhost:3000; then
              echo "Health check passed!"
            else
              echo "Health check failed!"
              exit 1
            fi
          EOF

      # - name: Deploy to Hetzner VPS
      #   uses: appleboy/ssh-action@v1.0.0
      #   with:
      #     host: ${{ secrets.VPS_HOST }}
      #     username: ${{ secrets.VPS_USERNAME }}
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     script: |
      #       cd /path/to/your/project
      #       docker-compose pull
      #       docker-compose down
      #       docker-compose up -d

      # - name: Health check
      #   uses: appleboy/ssh-action@v1.0.0
      #   with:
      #     host: ${{ secrets.VPS_HOST }}
      #     username: ${{ secrets.VPS_USERNAME }}
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     script: |
      #       curl -f http://localhost:80 || exit 1
