- name: Deploy to VPS
  if: success()
  run: |
    cat << 'EOFS' > deploy.sh
      set -x
      
      # Login to Docker Hub
      echo '${{ secrets.DOCKERHUB_TOKEN }}' | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      
      echo "Starting deployment as user: $(whoami)"
      
      # Pull the latest image
      docker pull greyfighter/prepre:nuxt-app-v1 

      # Cleanup: Stop all existing containers with the service name
      docker compose down || true
      
      # Remove any lingering containers
      docker rm -f $(docker ps -a -q -f name=nuxt-frontend) || true
      
      # Remove existing container names to avoid conflicts
      docker compose rm -f || true
      
      # Start fresh with new containers
      docker compose up -d --force-recreate --scale nuxt-frontend=3

      # Verify deployment
      echo "Verifying deployment..."
      sleep 10  # Give containers time to start
      docker ps | grep nuxt-frontend
      echo "Number of running instances:"
      docker ps -q -f name=nuxt-frontend | wc -l
    EOFS
    chmod +x deploy.sh

    sshpass -p "${{ secrets.VPS_PASSWORD }}" ssh -i ~/.ssh/id_rsa admin@49.13.174.222 'bash -s' < deploy.sh
    rm deploy.sh

- name: Create and transfer docker-compose file
  run: |
    cat << 'EOF' > docker-compose.yml

       services:
         nuxt-frontend:
           image: greyfighter/prepre:nuxt-app-v1
           restart: unless-stopped
           # Remove fixed host port mapping to allow scaling
       ports:
         - "3000-3002:3000"
       deploy:
         mode: replicated
         replicas: 3
       # Add healthcheck
       healthcheck:
         test: ["CMD", "curl", "-f", "http://localhost:3000"]
         interval: 30s
         timeout: 10s
         retries: 3
         start_period: 40s          EOF

       sshpass -p "${{ secrets.VPS_PASSWORD }}" scp -i ~/.ssh/id_rsa docker-compose.yml admin@49.13.174.222:~/docker-compose.yml
